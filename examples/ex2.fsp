
;; Definition of test-macro
;; Currently test-macro is only implemented internal, defmacro doesn't exist yet
;; (defmacro test-macro (+ a b))
;;
;; (test-macro '(* 2 3) 5) expands to (+ (* 2 3) 5)
(println (test-macro '(* 2 3) 5))                  ;; Returns 11

;; Checking they both evaluate to the same value
(if (= (test-macro '(* 2 3) 5) (+ (* 2 3) 5))
	(println "(test-macro '(* 2 3) 5) equals (+ (* 2 3) 5)")
	(println "(test-macro '(* 2 3) 5) doesn't equal (+ (* 2 3) 5)"))

(println (cdr (cdr '(+ 1 2 3 4 5 6 7 8 9 10))))    ;; Return (2 3 4 5 6 7 8 9 10)

;; An example of an if-statement in my Lisp
;; It compares the cdr (tail) of each list
(if (= (cdr '(a a a) (cdr '(b b b))))
	(println "(a a) equals (b b)")
	(println "(a a) doesn't equal (b b)"))

;; Print the two lists below
(println (cdr '(a a a)))
(println (cdr '(b b b)))
